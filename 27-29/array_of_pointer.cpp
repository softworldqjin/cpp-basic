int main()
{

	// 포인터 변수가 8byte인 이유는 주소를 저장하기 위해서인데
	// 메모리 주소는 0x0000001C3B94FA44 64비트, 즉 8byte이다.
	// 추가로 32비트 CPU는 42억 개의 주소를 표현할 수 있고, 
	// 4GB RAM이 바로 그 42억 바이트에 해당하기 때문에, 
	// CPU는 메모리 안의 데이터를 필요할 때 접근하고 수정하면서 게임이 진행된다.

	// 32비트 운영체제에서는 주소 폭이 32비트, 그래서 포인터변수의 크기는 4byte
	// 64비트 운영체제에서는 주소 폭이 64비트, 그래서 포인터변수의 크기는 8byte

	// 포인터 변수의 크기는 8 byte이다.
	int iSize = sizeof(int*);

	int* pInt = nullptr;
	int i = 0;

	pInt = &i;
	pInt += 1; // pInt는 (예를들어) 100번지라면, 가리키고 있는 것이 int형(4btye)라
			   // +1을 하면 104번지를 가리킴
			   // char* 포인터라면, +1 하면 101번지로 가겠지.
			   // == 다음 칸을 가리킨다.

	// 포인터와 배열
	// 배열의 특징
	// 1. 메모리가 연속적인 구조이다.
	// 2. 배열의 이름은 배열의 시작 주소이다.

	int iArr[10] = { 0 };

	iArr + 1; // 시작 주소에서 다음 주소로
	//int 단위로 접근
	*(iArr + 0) = 10; // 0번째
	*(iArr + 1) = 10; // 1번째

	return 0;
}
