// 함수 호출하는데, 변수 전달하면, call by value로 복붙하고 함수 끝나면 또 없어지고
// 이게 반복이되서 매우 비효율적
// 그냥 변수 자체를 전달하자 ->& a
// 함수에서는 파라미터로 받을텐데, 이때 받은 주소로 포인터를 통해 값을 수정하는 게 목적이 아니였으니, 
// 이 포인터로 수정을 하지 못하도록 exam(const int* a) 이렇게 해버리면 됨

void Output(const int* pI)	// 구조체같이 큰걸 복사하는 대신에(매우 비효율적)
							// 그냥 그 원본을 쓰자.
							// 근데, 그 원본 값을 수정하지 말자.라는 언급
{
	int i = *pI;
	*pI = 100; // 원본 못바꿈

	//int* pInt = (int*)pI;	// 일반 포인터로 강제 캐스팅 가능
	//*pInt = 1000;			// 가리키는 값 write 가능

}

int main()
{
	int a = 100;
	Output(&a); // 주소를 넘겨주기는 하는데, 원본이 수정될 수 도 있지않나,,
				// 근데 const 포인터가 선언되어있으니, 원본 값을 수정하지 않을거다. 확인됨
				// 단축키 Ctrl + Shift + Space 해당함수 보여줌

}